===============
 Project Views
===============

Projects are container like objects, which hold bug related information.

Setup
=====

Before we start with the test, we need a blank project we can adapt the
view on. Additionally we also need a testing screen, which renders the
form:

>>> import zope.component
>>> import zope.component.interfaces
>>> import superorganism.gui.tests
>>> screen = superorganism.gui.tests.Screen()
>>> project = zope.component.getUtility(
...     zope.component.interfaces.IFactory,
...     u'superorganism.Project')(
...         'project', '<Title>', '<Description>')

Adding Projects
===============

Paul arrives at work on Monday morning. His Boss tells him, that he has
to work on a new project: a system for managing people in an aged care
facility. "Yet another management system.", he thinks. He quickly writes
a small spec and starts Superorganism.
Paul presses the "p" key which opens the dialog to create a new project:

>>> view = zope.component.getMultiAdapter(
...     (project, screen), name='newproject')
>>> view.render()
(focus) Projecttitle
...
Project Description
Versions
...

He fills out the fields about `title` (Adult Care) and a `description`.
Two text widgets allow entering keyword information. He adds two
versions, for the `versions` field and two components for the
`component` field. He navigates to the `Save` button, presses the
`Enter` key, saves the form and the new Project is created.
