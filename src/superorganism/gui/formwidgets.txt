==============
 Form Widgets
==============

:doctest:
:setup: superorganism.tests.setUp

Form widgets are a set of urwid widgets which help the user to enter
data.

Setup
=====

The widget is adapting a zope schema field and the form. We create the
interface definition for the form first:

>>> import zope.schema
>>> import zope.interface
>>> class IForm(zope.interface.Interface):
...     title = zope.schema.TextLine(
...         title=u'Projecttitle',
...         description=u'Enter whatever you like.',)

We need to setup a form as well, which is a view:

>>> import zope.component
>>> import zope.component.interfaces
>>> import superorganism.tests
>>> screen = superorganism.tests.Screen()
>>> project = zope.component.getUtility(
...     zope.component.interfaces.IFactory,
...     u'superorganism.Project')(
...         'project', 'Bugzilla Project', '<Description>')
>>> form = zope.component.getMultiAdapter(
...     (project, screen), name='editproject')


TextInput Widgets
=================

The input widget consists of a title and an input field, which allows to
enter data by the user.

>>> import superorganism.gui.interfaces
>>> fields = zope.schema.getFields(IForm)
>>> field = fields['title']
>>> widget = zope.component.getMultiAdapter(
...     (field, form), superorganism.gui.interfaces.IFormWidget)

We verify if the widget implements it's interface:

>>> import zope.interface.verify
>>> import superorganism.gui.interfaces
>>> zope.interface.verify.verifyObject(
...     superorganism.gui.interfaces.ITextInputWidget, widget)
True


If we render the widget, it will only show a title and expects input:

>>> widget.render((80,)).text
['Projecttitle...Bugzilla Project...']

A description helps the user about what he should enter:

>>> widget.description = "Enter whatever you like."
>>> widget.update()
>>> list(widget.render((120,)).content())
[[...Projecttitle...Bugzilla Project...Enter whatever you like.'...

If the user enters a value:

>>> widget.set('entered by user')

We can ask about the value entered:

>>> widget.value
'entered by user'
>>> widget.update()
>>> widget.value
'entered by user'

